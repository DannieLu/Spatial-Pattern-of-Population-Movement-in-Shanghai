hist(dist,xlim = c(0,limx),breaks = 40)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
x<-seq(0,limx,0.01)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col='red',xlab = '',ylab='',xaxt='n',yaxt='n')
limx<-40
dist<-D[D$hour==5 & D$distance>0.01 ,'distance']
hist(dist,xlim = c(0,limx),breaks = 40)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col='red',xlab = '',ylab='',xaxt='n',yaxt='n')
limx<-20
dist<-D[D$hour==5 & D$distance>0.01 ,'distance']
hist(dist,xlim = c(0,limx),breaks = 40)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col='red',xlab = '',ylab='',xaxt='n',yaxt='n')
limx<-10
plot(1, type="n", xlab="Trip Length (KM)", ylab="density", xlim=c(0, limx),ylim = c(0,0.6))
Col<-c('purple','red','blue','green','black')
for (i in 1:5)
{
dist<-D[D$hour== (4+i) & D$distance>0.01,'distance']
hist(dist,xlim=c(0,limx),breaks = 50)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
print(paste('hour =',4+i,';shape=',shape,';scale=',scale))
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col=Col[i],ylim=c(0,0.6),xlab = '',ylab='',xaxt='n',yaxt='n')
# plot(dgamma(x,shape=shape,scale = scale),type='l',xlim = c(0,limx),ylim = c(0,1))
}
limx<-10
plot(1, type="n", xlab="Trip Length (KM)", ylab="density", xlim=c(0, limx),ylim = c(0,0.6))
Col<-c('purple','red','blue','green','black')
for (i in 1:5)
{
dist<-D[D$hour== (4+i) & D$distance>0.01,'distance']
#hist(dist,xlim=c(0,limx),breaks = 50)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
print(paste('hour =',4+i,';shape=',shape,';scale=',scale))
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col=Col[i],ylim=c(0,0.6),xlab = '',ylab='',xaxt='n',yaxt='n')
# plot(dgamma(x,shape=shape,scale = scale),type='l',xlim = c(0,limx),ylim = c(0,1))
}
limx<-10
plot(1, type="n", xlab="Trip Length (KM)", ylab="density", xlim=c(0, limx),ylim = c(0,0.6))
Col<-c('purple','red','blue','green','black')
for (i in 1:5)
{
dist<-D[D$hour== (4+i) & D$distance>0.01,'distance']
#hist(dist,xlim=c(0,limx),breaks = 50)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
print(paste('hour =',4+i,';shape=',shape,';scale=',scale,';mean=',shape*scale))
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col=Col[i],ylim=c(0,0.6),xlab = '',ylab='',xaxt='n',yaxt='n')
# plot(dgamma(x,shape=shape,scale = scale),type='l',xlim = c(0,limx),ylim = c(0,1))
}
abline(v=mean_D,col=Col,lty='dotted')
legend('topright',lty=1,col=c('purple','red','blue','green','black'),cex=0.8,bty='n',
legend = c('5:00~6:00 am','6:00~7:00 am','7:00~8:00 am','8:00~9:00 am','9:00~10:00 am'))
for (i in 1:5)
{
legend(x=mean_D[i],y=0.5,legend = mean_D[i],text.col = Col[i],cex = 0.5)
}
for (i in 1:5)
{
legend(x=mean_D[i]-0.5,y=0.5,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
for (i in 1:5)
{
legend(x=mean_D[i]-0.3,y=0.5,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
limx<-10
plot(1, type="n", xlab="Trip Length (KM)", ylab="density", xlim=c(0, limx),ylim = c(0,0.6))
Col<-c('purple','red','blue','green','black')
for (i in 1:5)
{
dist<-D[D$hour== (4+i) & D$distance>0.01,'distance']
#hist(dist,xlim=c(0,limx),breaks = 50)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
print(paste('hour =',4+i,';shape=',shape,';scale=',scale,';mean=',shape*scale))
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col=Col[i],ylim=c(0,0.6),xlab = '',ylab='',xaxt='n',yaxt='n')
# plot(dgamma(x,shape=shape,scale = scale),type='l',xlim = c(0,limx),ylim = c(0,1))
}
abline(v=mean_D,col=Col,lty='dotted')
for (i in 1:5)
{
legend(x=mean_D[i]-0.3,y=0.5,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
legend('topright',lty=1,col=c('purple','red','blue','green','black'),cex=0.8,bty='n',
legend = c('5:00~6:00 am','6:00~7:00 am','7:00~8:00 am','8:00~9:00 am','9:00~10:00 am'))
for (i in 1:5)
{
legend(x=mean_D[i]-0.3,y=0.5-0.06*i,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
for (i in 1:5)
{
legend(x=mean_D[i]-0.3,y=0.1+0.06*i,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
limx<-10
plot(1, type="n", xlab="Trip Length (KM)", ylab="density", xlim=c(0, limx),ylim = c(0,0.6))
Col<-c('purple','red','blue','green','black')
for (i in 1:5)
{
dist<-D[D$hour== (4+i) & D$distance>0.01,'distance']
#hist(dist,xlim=c(0,limx),breaks = 50)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
print(paste('hour =',4+i,';shape=',shape,';scale=',scale,';mean=',shape*scale))
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col=Col[i],ylim=c(0,0.6),xlab = '',ylab='',xaxt='n',yaxt='n')
# plot(dgamma(x,shape=shape,scale = scale),type='l',xlim = c(0,limx),ylim = c(0,1))
}
abline(v=mean_D,col=Col,lty='dotted')
for (i in 1:5)
{
legend(x=mean_D[i]-0.3,y=0.1+0.06*i,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
legend('topright',lty=1,col=c('purple','red','blue','green','black'),cex=0.8,bty='n',
legend = c('5:00~6:00 am','6:00~7:00 am','7:00~8:00 am','8:00~9:00 am','9:00~10:00 am'))
limx<-10
plot(1, type="n", xlab="Trip Length (KM)", ylab="Density", xlim=c(0, limx),ylim = c(0,0.6))
Col<-c('purple','red','blue','green','black')
for (i in 1:5)
{
dist<-D[D$hour== (4+i) & D$distance>0.01,'distance']
#hist(dist,xlim=c(0,limx),breaks = 50)
shape = mean(dist)^2/var(dist)
scale = var(dist)/mean(dist)
print(paste('hour =',4+i,';shape=',shape,';scale=',scale,';mean=',shape*scale))
x<-seq(0,limx,0.01)
par(new=T)
curve(dgamma(x,shape=shape,scale = scale),from = 0,to=limx,col=Col[i],ylim=c(0,0.6),xlab = '',ylab='',xaxt='n',yaxt='n')
# plot(dgamma(x,shape=shape,scale = scale),type='l',xlim = c(0,limx),ylim = c(0,1))
}
abline(v=mean_D,col=Col,lty='dotted')
for (i in 1:5)
{
legend(x=mean_D[i]-0.3,y=0.1+0.06*i,legend = mean_D[i],text.col = Col[i],cex = 0.6,bty='n')
}
legend('topright',lty=1,col=c('purple','red','blue','green','black'),cex=0.8,bty='n',
legend = c('5:00~6:00 am','6:00~7:00 am','7:00~8:00 am','8:00~9:00 am','9:00~10:00 am'))
setwd('C:/Users/Dannie/Dropbox/Dissertation/GMSData/R/SpatialAnalysis')
read('fishnetpoint05.txt')
D<-read.table('fishnetpoint05.txt')
D<-read.table('fishnetpoint05.txt',sep=',')
View(D)
D<-read.table('fishnetpoint05.txt',sep=',',header = T)
View(D)
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
View(D.raw)
View(D.raw)
View(D.raw)
View(D.raw)
D<-D.raw(c('longitude','latitude','Join_Count'))
D<-D.raw[c('longitude','latitude','Join_Count')]
View(D)
plot(D$longitude,D$latitude)
unique(D$longitude)
length(unique(D$longitude))
class(D$longitude)
class(D$latitude)
D<-D[!is.na(D)]
D<-D[!is.na(D),]
!is.na(D)
D<-D.raw[c('longitude','latitude','Join_Count')]
D<-D[!is.na(D),]
View(D)
D<-D.raw[c('longitude','latitude','Join_Count')]
D<-D[D$longitude==0,]
View(D)
D<-D.raw[c('longitude','latitude','Join_Count')]
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
D<-D.raw[c('longitude','latitude','Join_Count')]
D<-D[D$longitude!=0,]
View(D)
plot(D$longitude,D$latitude)
setwd('C:/Users/Dannie/Dropbox/Dissertation/GMSData/R/SpatialAnalysis')
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
View(D.raw)
D<-D.raw[c('long','lat','Join_Count')]
D<-D[D$longitude!=0,]
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
D<-D.raw[c('long','lat','Join_Count')]
View(D)
plot(D$longitude,D$latitude)
summary(D$long)
summary(D$lat)
plot(D$long,D$lat)
D.raw<-read.table('fishnetpoint06.txt',sep=',',header = T)
D<-D.raw[c('long','lat','Join_Count')]# other hour
View(D.raw)
summary(D$Join_Count)
D.raw<-read.table('fishnetpoint06.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
summary(D$freq)
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
D<-D.raw[c('long','lat','Join_Count')]# hour 5
summary(D$Join_Count)
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
D<-D.raw[c('long','lat','Join_Count')]# hour 5
names(D)<-c('long','lat','freq')
plot(D$freq)
hist(D$freq)
D.raw<-read.table('fishnetpoint06.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
summary(D$long)
summary(D$lat)
summary(D$freq)
plot(D$long,D$lat)
hist(D$freq)
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
D<-D.raw[c('long','lat','Join_Count')]# hour 5
names(D)<-c('long','lat','freq')
View(D.raw)
hist(D$freq)
library(geoR)
library(akima)
library(gstat)
simul.geo <- as.geodata(D)
simul.var <- variog(simul.geo,estimator.type="classical")
simul.modvar <- variog(simul.geo,estimator.type="modulus")# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
D.raw<-read.table('fishnetpoint06.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
summary(D$long)
summary(D$lat)
summary(D$freq)
plot(D$long,D$lat)
hist(D$freq)
simul.geo <- as.geodata(D)
simul.var <- variog(simul.geo,estimator.type="classical")
simul.modvar <- variog(simul.geo,estimator.type="modulus")# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
D.raw<-read.table('fishnetpoint07.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
summary(D$long)
summary(D$lat)
summary(D$freq)
plot(D$long,D$lat)
hist(D$freq)
simul.geo <- as.geodata(D)
simul.var <- variog(simul.geo,estimator.type="classical")
simul.modvar <- variog(simul.geo,estimator.type="modulus")# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
D.raw<-read.table('fishnetpoint09.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
summary(D$long)
summary(D$lat)
summary(D$freq)
plot(D$long,D$lat)
hist(D$freq)
simul.geo <- as.geodata(D)
simul.var <- variog(simul.geo,estimator.type="classical")
simul.modvar <- variog(simul.geo,estimator.type="modulus")# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
int.scp <- interp(D$long, D$lat, D$freq)
image(int.scp,xlim=range(Data$longitude),ylim=range(Data$latitude))
image(int.scp,xlim=range(D$long),ylim=range(D$lat))
contour(int.scp,add=TRUE)
persp(int.scp,theta=60, phi=30)
library(maps)
map('china')
map('China')
D.raw<-read.table('fishnetpoint09.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
summary(D$long)
summary(D$lat)
summary(D$freq)
plot(D$long,D$lat)
hist(D$freq)
# semivariogram
simul.geo <- as.geodata(D)
simul.var <- variog(simul.geo,estimator.type="classical")
simul.modvar <- variog(simul.geo,estimator.type="modulus")# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
plot(simul.modvar)
simul.modvar
summary(D$freq)
boxplot(D$freq)
simul.geo <- as.geodata(D)
simul.var <- variog(simul.geo,estimator.type="classical")
simul.modvar <- variog(simul.geo,estimator.type="modulus")# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
mod='spherical'
dir.variog<-variog4(simul.geo, direction = c(0, pi/4, pi/2, 3*pi/4))
plot(dir.variog,xlim=c(0,4),bty='n',cex=0.7)
plot(dir.variog,xlim=c(0,4),bty='n',cex=0.6,bty='n')
spherical.anis.ml.fit <- likfit(simul.geo,cov.model=mod,ini.cov.pars=ini)
print(summary(spherical.anis.ml.fit))
ini<-c(1,1)
spherical.anis.ml.fit <- likfit(simul.geo,cov.model=mod,ini.cov.pars=ini)
print(summary(spherical.anis.ml.fit))
fit.cov.par<-as.numeric(spherical.anis.ml.fit$aniso.pars)
aniso.coords1 <- coords.aniso(coords,aniso.pars=fit.cov.par,reverse=FALSE)
obj.aniso1 <- cbind(aniso.coords1,Datafit$Res)
geo.aniso1 <- as.geodata(obj.aniso1,coords.col=1:2,data.col=3)
trans.var1 <- variog(geo.aniso1,estimator.type="classical")
trans.modvar1 <- variog(geo.aniso1,estimator.type="modulus")
lim<-max(trans.var1$v,trans.modvar1$v)*1.2
plot(trans.var1,pch=20,ylim=c(0,lim))
par(new=T)
plot(trans.modvar1,ylim=c(0,lim),xaxt='n',yaxt='n',col='red',pch=20,xlab='',ylab='')
#  legend('topleft',pch = c(20,20),col=c('black','red'),legend = c('Matheron','Hawkins and Cressie'),cex=0.6,bty='n')
title(paste(mod,'(MLE)'))
lines(spherical.anis.ml.fit,col="blue")
legend('topright',legend = paste('psiA=',round(fit.cov.par[1]*180/pi),sep=''),bty='n',cex=0.8)
par(mfcol=c(1,1))
plot(trans.var1,pch=20,ylim=c(0,lim))
plot(trans.modvar1,ylim=c(0,lim),xaxt='n',yaxt='n',col='red',pch=20,xlab='',ylab='')
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(1,2),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(1,2),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(1,2),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(1,2),cov.model="spherical",weights="cressie",fix.kappa = F)
plot(simul.var,main='')
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(1,4),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(1,4),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(1,4),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(1,4),cov.model="spherical",weights="cressie",fix.kappa = F)
plot(simul.var,main='')
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
?variofit
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(10,0.1),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(10,0.1),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(10,0.1),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(10,0.1),cov.model="spherical",weights="cressie",fix.kappa = F)
plot(simul.var,main='')
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(100,0.1),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(100,0.1),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(100,0.1),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(100,0.1),cov.model="spherical",weights="cressie",fix.kappa = F)
plot(simul.var,main='')
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(100,0.2),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(100,0.2),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(100,0.2),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(100,0.2),cov.model="spherical",weights="cressie",fix.kappa = F)
plot(simul.var,main='')
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(1,0.2),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(1,0.2),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(1,0.2),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(1,0.2),cov.model="spherical",weights="cressie",fix.kappa = F)
plot(simul.var,main='')
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
setwd('C:/Users/Dannie/Dropbox/Dissertation/GMSData/R/SpatialAnalysis')
library(geoR)
library(akima)
library(gstat)
D.raw<-read.table('fishnetpoint09.txt',sep=',',header = T)
D<-D.raw[c('long','lat','freq')]# other hour
plot(D$long,D$lat)
boxplot(D$freq)
hist(D$freq,breaks=20,main='',xlab = 'Number of mobile user',ylab = 'Frequency of sites')
lgfreq<-log(D$freq+1)
hist(lgfreq)
D$lgfreq<-lgfreq
# semivariogram
simul.geo <- as.geodata(D[,c(1,2,4)])
simul.var <- variog(simul.geo,estimator.type="classical",breaks=seq(0,0.4,0.01))
simul.modvar <- variog(simul.geo,estimator.type="modulus",breaks=seq(0,0.4,0.01))# (Hawkins and Cressie,
plot(simul.var)
plot(simul.modvar)
# Variogram fit
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="spherical",weights="cressie",fix.kappa = F)
fit2 <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="cubic",weights="cressie",fix.kappa = F)
plot(simul.var,main='',pch=20)
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
lines(fit2,col='orange')
legend('topleft',col = c('black','red','blue','green','orange'),bty='n',lty=1,cex = 0.75,
legend = c('exponential','matern','gaussian','spherical','cubic'))
fit.nug.cressie.exp <- variofit(simul.modvar,ini.cov.pars=c(10,0.3),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.modvar,ini.cov.pars=c(10,0.3),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.modvar,ini.cov.pars=c(10,0.3),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.modvar,ini.cov.pars=c(10,0.3),cov.model="spherical",weights="cressie",fix.kappa = F)
fit2 <- variofit(simul.modvar,ini.cov.pars=c(10,0.3),cov.model="cubic",weights="cressie",fix.kappa = F)
plot(simul.var,main='',pch=20)
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
lines(fit2,col='orange')
legend('topleft',col = c('black','red','blue','green','orange'),bty='n',lty=1,cex = 0.75,
legend = c('exponential','matern','gaussian','spherical','cubic'))
plot(simul.modvar,main='',pch=20)
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
lines(fit2,col='orange')
legend('topleft',col = c('black','red','blue','green','orange'),bty='n',lty=1,cex = 0.75,
legend = c('exponential','matern','gaussian','spherical','cubic'))
fit.nug.cressie.exp <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="exponential",weights="cressie",fix.kappa = F)
fit.nug.cressie.mat <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model='matern',weights="cressie",fix.kappa = F)
fit.nug.cressie.gau <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="gaussian",weights="cressie",fix.kappa = F)
fit.nug.cressie.sph <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="spherical",weights="cressie",fix.kappa = F)
fit2 <- variofit(simul.var,ini.cov.pars=c(10,0.3),cov.model="cubic",weights="cressie",fix.kappa = F)
plot(simul.modvar,main='',pch=20)
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
lines(fit2,col='orange')
legend('topleft',col = c('black','red','blue','green','orange'),bty='n',lty=1,cex = 0.75,
legend = c('exponential','matern','gaussian','spherical','cubic'))
plot(simul.var,main='',pch=20)
lines(fit.nug.cressie.exp,col='black')
lines(fit.nug.cressie.mat,col='red')
lines(fit.nug.cressie.gau,col='blue')
lines(fit.nug.cressie.sph,col='green')
lines(fit2,col='orange')
legend('topleft',col = c('black','red','blue','green','orange'),bty='n',lty=1,cex = 0.75,
legend = c('exponential','matern','gaussian','spherical','cubic'))
summary(fit2)
ini=c(10,0.3)
ml.exp <- likfit(simul.var,cov.model="exponential",ini.cov.pars=ini,fix.kappa = F)
ml.mat <- likfit(simul.var,cov.model="matern",ini.cov.pars=ini,fix.kappa = F)
ml.gau <- likfit(simul.var,cov.model="gaussian",ini.cov.pars=ini,fix.kappa = F)
ml.sph <- likfit(simul.var,cov.model="spherical",ini.cov.pars=ini,fix.kappa = F)
ml.cub <- likfit(simul.var,cov.model="cubic",ini.cov.pars=ini,fix.kappa = F)
ml.exp <- likfit(simul.var,cov.model="exponential",ini.cov.pars=ini,fix.kappa = F)
ml.mat <- likfit(simul.var,cov.model="matern",ini.cov.pars=ini,fix.kappa = F)
ml.gau <- likfit(simul.var,cov.model="gaussian",ini.cov.pars=ini,fix.kappa = F)
ml.sph <- likfit(simul.var,cov.model="spherical",ini.cov.pars=ini,fix.kappa = F)
ml.cub <- likfit(simul.var,cov.model="cubic",ini.cov.pars=ini,fix.kappa = F)
simul.var
ml.exp <- likfit(simul.geo,cov.model="exponential",ini.cov.pars=ini,fix.kappa = F)
ml.mat <- likfit(simul.geo,cov.model="matern",ini.cov.pars=ini,fix.kappa = F)
ml.gau <- likfit(simul.geo,cov.model="gaussian",ini.cov.pars=ini,fix.kappa = F)
ml.sph <- likfit(simul.geo,cov.model="spherical",ini.cov.pars=ini,fix.kappa = F)
ml.cub <- likfit(simul.geo,cov.model="cubic",ini.cov.pars=ini,fix.kappa = F)
plot(simul.var,main='',pch=20)
lines(ml.exp,col='black')
lines(ml.mat,col='red')
lines(ml.gau,col='blue')
lines(ml.sph,col='green')
lines(ml.cub,col='orange')
legend('topleft',col = c('black','red','blue','green','orange'),bty='n',lty=1,cex = 0.75,
legend = c('exponential','matern','gaussian','spherical','cubic'))
ml.gau <- likfit(simul.geo,cov.model="gaussian",ini.cov.pars=ini,fix.kappa = F)
ml.gau <- likfit(simul.geo,cov.model="gaussian",ini.cov.pars=c(5,0.3),fix.kappa = F)
ml.gau <- likfit(simul.geo,cov.model="gaussian",ini.cov.pars=c(5,0.2),fix.kappa = F)
ml.gau <- likfit(simul.geo,cov.model="gaussian",ini.cov.pars=c(5,0.2))
summary(fit.nug.cressie.gau )
View(D)
setwd('C:/Users/Dannie/Dropbox/Dissertation/GMSData/R/SpatialAnalysis')
library(geoR)
library(akima)
library(gstat)
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
View(D.raw)
summary(D.raw$Join_Count)
hist(D.raw$Join_Count)
hist(log(D.raw$Join_Count))
D.raw<-read.table('fishnetpoint09.txt',sep=',',header = T)
View(D.raw)
summary(D.raw$Join_Count)
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
D<-D.raw[c('long','lat','Join_Count')]# hour 5
View(D.raw)
setwd('C:/Users/Dannie/Documents/GitHub/SpatialProject')
D.raw<-read.table('fishnetpoint05.txt',sep=',',header = T)
View(D.raw)
D<-D.raw[c('long','lat','freq')]# other hour
View(D)
summary(D$freq)
View(D.raw)
